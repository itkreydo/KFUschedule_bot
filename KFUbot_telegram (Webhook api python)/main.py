# -*- coding: utf-8 -*-
import telebot
import cherrypy
import config
import sqlite3
import time as timer
from datetime import datetime, date, time
from telebot import types
import func,keyboards
import time as times
import WordTemplate

# key value vor soc pit
conn = sqlite3.connect('/home/scheduleKFU/sql.db')
c = conn.cursor()
c.execute("SELECT count(*) FROM users Where chat_id != 0")
count = c.fetchall()
c.execute("SELECT * FROM users Where chat_id != 0")
results = c.fetchall()
d = {}
for i in range(count[0][0]):
    d[results[i][4]] = 0
print('k/v: ',d)
usersData = {}
for i in range(count[0][0]):
    usersData[results[i][4]] = WordTemplate.soc()
# key value vor soc pit

bot = telebot.TeleBot(config.token)
stat = 0
chat = 0
timeSecStart = 0
class WebhookServer(object):
    @cherrypy.expose
    def index(self):
        if 'content-length' in cherrypy.request.headers and \
                        'content-type' in cherrypy.request.headers and \
                        cherrypy.request.headers['content-type'] == 'application/json':
            length = int(cherrypy.request.headers['content-length'])
            json_string = cherrypy.request.body.read(length).decode("utf-8")
            update = telebot.types.Update.de_json(json_string)
            # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            bot.process_new_updates([update])
            return ''
        else:
            raise cherrypy.HTTPError(403)


@bot.message_handler(commands=["relogin"])
def Changename(m):
    bot.send_message(m.chat.id,
                     '–•–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É –∫–æ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ?üòâ \n–í–≤–µ–¥–∏ —Ñ–∞–º–∏–ª–∏—é')

@bot.message_handler(commands=["soc"])
def Changename(m):
    bot.send_message(m.chat.id,
                     'üçî–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Ä–µ–∂–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–æ—Ü. –ø–∏—Ç–∞–Ω–∏—è\n–¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ 14 –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤\n–ò—Ç–∞–∫, –ø—Ä–∏—Å—Ç—É–ø–∏–º')
    bot.send_message(m.chat.id,
                     '–í–≤–µ–¥–∏ –§–ò–û')
    d[m.chat.id] = 1

@bot.message_handler(commands=["say"])
def Changename(m):
    if (m.chat.id==422105423):
        bot.send_message(m.chat.id, '–¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º')
        i=0
        conn = sqlite3.connect('/home/scheduleKFU/sql.db')
        c = conn.cursor()
        c.execute("SELECT count(*) FROM users Where chat_id != 0")
        count = c.fetchall()
        c.execute("SELECT * FROM users Where chat_id != 0")
        results = c.fetchall()
        print(results)
        while i < count[0][0]:
            bot.send_message(results[i][4],'‚ùóÔ∏è–ò–Ω—Ñ–∞ –æ—Ç —Å—Ç–∞—Ä–æ—Å—Ç—ã‚ùóÔ∏è\n'+m.text[4:len(m.text)])
            print(results[i][1])
            times.sleep(3)
            i+=1
    else:
        bot.send_message(m.chat.id, '–£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')


@bot.message_handler(commands=["update"])
def Changename(m):
    if (m.chat.id == 260905393):
        bot.send_message(m.chat.id,'Info sended')
        i=0
        conn = sqlite3.connect('/home/scheduleKFU/sql.db')
        c = conn.cursor()
        c.execute("SELECT count(*) FROM users Where chat_id != 0")
        count = c.fetchall()
        c.execute("SELECT * FROM users Where chat_id != 0")
        results = c.fetchall()
        print(results)
        while i < count[0][0]:
            bot.send_message(results[i][4],'üîÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ üîÖ\n'+m.text[7:len(m.text)])
            print(results[i][1])
            times.sleep(3)
            i+=1
    else:
        bot.send_message(m.chat.id, '–£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')

@bot.message_handler(commands=["info7"])
def Changename(m):
    bot.send_message(m.chat.id,'Info sended')
    i=0
    conn = sqlite3.connect('/home/scheduleKFU/sql.db')
    c = conn.cursor()
    c.execute("SELECT count(*) FROM users Where chat_id != 0")
    count = c.fetchall()
    c.execute("SELECT * FROM users Where chat_id != 0")
    results = c.fetchall()
    print(results)
    while i < count[0][0]:
        bot.send_message(results[i][4],'‚ö†Ô∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚ö†Ô∏è\n'+m.text[6:len(m.text)])
        print(results[i][1])
        times.sleep(3)
        i+=1


@bot.message_handler(commands=["menu"])
def Changename(m):
    bot.send_message(m.chat.id, 'üîÖ–ú–µ–Ω—éüîÖ', reply_markup=keyboards.keyboardMenu)
@bot.message_handler(commands=["stop"])
def Changename(m):
    bot.send_message(m.chat.id, '–í—ã –æ—Ç–∫–ª—é—á–∏–ª–∏ —Ä–µ–∂–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±—ã—á–Ω—É—é –∂–∏–∑–Ω—åüëç', reply_markup=keyboards.keyboardMenu)
    d[m.chat.id] = 0



@bot.message_handler(commands=["start"])
def GroupChoose(m):
    global stat
    global chat
    global timeSecStart
    bot.send_message(m.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç, —Å—Ç—É–¥–µ–Ω—Çüñê \n–Ø –ø–æ–¥—Å–∫–∞–∂—É —Ç–µ–±–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ª—é–±–æ–π –¥–µ–Ω—å –∏ –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é) \n–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –≤–µ—Ä—Å–∏–∏ 2.0: \nüéß - —Ç–∞–∫ –æ–±–æ–∑–Ω–∞—á–∞—é—Ç—Å—è –ª–µ–∫—Ü–∏–∏ \nüîÖ–î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–§–æ—Ç–∫–∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏—èüì∏"\n')
    conn = sqlite3.connect('/home/scheduleKFU/sql.db')
    c = conn.cursor()
    c.execute("SELECT count(*) FROM users Where chat_id = " + str(m.chat.id))
    results = c.fetchall()
    print('New user /start')
    if (results[0][0] == 0):
        bot.send_message(m.chat.id, '–í–≤–µ–¥–∏ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é')
    else:
        c.execute("SELECT * FROM users Where chat_id = " + str(m.chat.id))
        results = c.fetchall()
        bot.send_message(m.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ' + results[0][1])
        bot.send_message(m.chat.id, '–¢—ã –≤ ' + str(results[0][2]) + ' –≥—Ä—É–ø–ø–µ')
        bot.send_message(m.chat.id, '–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å', reply_markup=keyboards.keyboard)


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(func=lambda message: True, content_types=['text'])
def scheduleChoose(m):
    global stat
    global chat
    conn = sqlite3.connect('/home/scheduleKFU/sql.db')
    c = conn.cursor()
    c.execute("SELECT count(*) FROM users Where chat_id = " + str(m.chat.id))
    results = c.fetchall()
    print('new message')
    print(results[0][0])
    if (results[0][0] == 0):
        c.execute("SELECT count(*) FROM users Where sername ='" + m.text + "'")
        results = c.fetchall()
        if results[0][0] == 0:
            bot.send_message(m.chat.id,
                             '–û—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ —Ç–∞–∫–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ —É –Ω–∞—Å –Ω–µ—Ç. \n–í–æ–∑–º–æ–∂–Ω–æ —Ç—ã –æ—à–∏–±—Å—è –ø—Ä–∏ –≤–≤–æ–¥–µ —Ñ–∞–º–∏–ª–∏–∏, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑. /start')
            return
        c.execute("SELECT * FROM users Where sername ='" + m.text + "'")
        results = c.fetchall()
        c.execute("UPDATE users SET chat_id = ? WHERE sername = ? ", (m.chat.id, m.text))
        conn.commit()
        bot.send_message(m.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ' + m.text)
        bot.send_message(m.chat.id, '–¢—ã –≤ ' + str(results[0][2]) + ' –≥—Ä—É–ø–ø–µ')
        bot.send_message(m.chat.id, '–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å', reply_markup=keyboards.keyboard)
        print('–∑–∞—Ä–µ–≥–∞–Ω '+m.text)
    else:
        print('est')
        c.execute("SELECT * FROM users Where chat_id = " + str(m.chat.id))
        results = c.fetchall()
        print(results)
        #soc pit
        if d[m.chat.id]!=0:

            res=WordTemplate.wordWriteDataFunction(d[m.chat.id],m.text,usersData[m.chat.id])
            usersData[m.chat.id]=res['data']
            d[m.chat.id] = res['i']
            print(usersData[m.chat.id].fio)
            bot.send_message(m.chat.id, res['msg'])
            if (d[m.chat.id] == 15):
                d[m.chat.id] =0
                doc1 = open('/home/scheduleKFU/socPit/gotovo/ZayavlenieNaPit.docx', 'rb')
                doc2 = open('/home/scheduleKFU/socPit/gotovo/dogovor.docx', 'rb')
                doc3 = open('/home/scheduleKFU/socPit/gotovo/Soglasie.docx', 'rb')
                doc4 = open('/home/scheduleKFU/socPit/gotovo/ZayavlenieRaz.docx', 'rb')
                doc5 = open('/home/scheduleKFU/socPit/gotovo/OprosAnketa.docx', 'rb')
                doc6 = open('/home/scheduleKFU/socPit/gotovo/DopAnketa.docx', 'rb')
                bot.send_document(m.chat.id, doc1)
                bot.send_document(m.chat.id, doc2)
                bot.send_document(m.chat.id, doc3)
                bot.send_document(m.chat.id, doc4)
                bot.send_document(m.chat.id, doc5)
                bot.send_document(m.chat.id, doc6)
                doc1.close()
                doc2.close()
                doc3.close()
                doc4.close()
                doc5.close()
                doc6.close()
                bot.send_message(260905393, "üçî "+usersData[m.chat.id].fio)
                bot.send_message(m.chat.id,
                                 '‚ú®–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!\n –¢–æ–ª—å–∫–æ —á—Ç–æ –≤—ã –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ —Å–æ—Ü. –ø–∏—Ç–∞–Ω–∏–µ.\n–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –µ–¥–æ–π, –ø–æ–∫–∞ –Ω–∞ –≤–∞—Å –æ—Ñ–æ—Ä–º–ª—è–µ—Ç—Å—è –∫—Ä–µ–¥–∏—Ç:)')

            return
        #soc pit

        if m.text == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫üìö':
            bot.send_message(m.chat.id, func.timetable(1, func.chet(), results[0][2],results[0][3]), reply_markup=keyboards.keyboard)
            print('–≤—ã–±—Ä–∞–ª –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
        elif m.text == '–í—Ç–æ—Ä–Ω–∏–∫üìö':
            bot.send_message(m.chat.id, func.timetable(2, func.chet(), results[0][2],results[0][3]), reply_markup=keyboards.keyboard)
            print('–≤—ã–±—Ä–∞–ª –≤—Ç–æ—Ä–Ω–∏–∫')
        elif m.text == '–°—Ä–µ–¥–∞üìö':
            bot.send_message(m.chat.id, func.timetable(3, func.chet(), results[0][2],results[0][3]), reply_markup=keyboards.keyboard)
            print('–≤—ã–±—Ä–∞–ª —Å—Ä–µ–¥—É')
        elif m.text == '–ü—è—Ç–Ω–∏—Ü–∞üìö':
            bot.send_message(m.chat.id, func.timetable(5, func.chet(), results[0][2],results[0][3]), reply_markup=keyboards.keyboard)
            print('–≤—ã–±—Ä–∞–ª –ø—è—Ç–Ω–∏—Ü—É')
        elif m.text == '–ß–µ—Ç–≤–µ—Ä–≥üìö':
            bot.send_message(m.chat.id, func.timetable(4, func.chet(), results[0][2],results[0][3]), reply_markup=keyboards.keyboard)
            print('–≤—ã–±—Ä–∞–ª —á–µ—Ç–≤–µ—Ä–≥')
        elif m.text == '–°—É–±–±–æ—Ç–∞üìö':
            bot.send_message(m.chat.id, func.timetable(6, func.chet(), results[0][2],results[0][3]), reply_markup=keyboards.keyboard)
            print('–≤—ã–±—Ä–∞–ª —Å—É–±–±–æ—Ç—É')
        elif m.text == '–•–∑ –∫–∞–∫–æ–π –¥–µ–Ω—å, –∫—É–¥–∞ –º–Ω–µ –∏–¥—Ç–∏?ü§∑‚Äç‚ôÇ':
            print('–≤—ã–±—Ä–∞–ª —Ö–∑ –∫–∞–∫–æ–π –¥–µ–Ω—å')
            if (func.chet()==1):
                chetNed='–Ω/–Ω'
            else:
                chetNed = '—á/–Ω'
            bot.send_message(m.chat.id, '–°–µ–≥–æ–¥–Ω—è ' + func.day(datetime.today().isoweekday())+' '+chetNed, reply_markup=keyboards.keyboard)
            bot.send_message(m.chat.id,
                             func.timetable(datetime.today().isoweekday(), func.chet(), results[0][2],results[0][3]),
                             reply_markup=keyboards.keyboard)
        elif m.text == '–§–æ—Ç–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüì∏':
            photo = '/home/scheduleKFU/sch.jpg'
            print('photo send button')
            bot.send_photo(m.chat.id, open(photo, 'rb'))
        elif m.text == '–î–æ–∫—É–º–µ–Ω—Ç—ã –°–æ—Ü. –ü–∏—Ç.üçî':
            bot.send_message(m.chat.id,'–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Ä–µ–∂–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–æ—Ü. –ø–∏—Ç–∞–Ω–∏—èüçî\n –¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ 14 –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤\n–í–≤–µ–¥–∏—Ç–µ /stop, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –∑–∞–ø–æ–ª–Ω—è—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–ª–∏ –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É.\n–ò—Ç–∞–∫, –ø—Ä–∏—Å—Ç—É–ø–∏–º')
            bot.send_message(m.chat.id,'–í–≤–µ–¥–∏ –§–ò–û')
            d[m.chat.id] = 1
        elif m.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üóí':
            bot.send_message(m.chat.id,'–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å', reply_markup=keyboards.keyboard)
        elif m.text == 'Secret':
            bot.send_message(m.chat.id,'–≠—Ç–æ —Å–µ–∫—Ä–µ—Ç, –∏ –Ω–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç —á—Ç–æ —Ç–∞–º, –∏ –∫–æ–≥–¥–∞ —ç—Ç–æ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—ÇüòÖ', reply_markup=keyboards.keyboard)
        else:
            c.execute("SELECT * FROM users Where chat_id = " + str(m.chat.id))
            results = c.fetchall()
            bot.send_message(422105423, 'üîÖ '+results[0][1]+': '+m.text)


# –°–Ω–∏–º–∞–µ–º –≤–µ–±—Ö—É–∫ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π (–∏–∑–±–∞–≤–ª—è–µ—Ç –æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ–±–ª–µ–º)
bot.remove_webhook()
 # –°—Ç–∞–≤–∏–º –∑–∞–Ω–æ–≤–æ –≤–µ–±—Ö—É–∫
bot.set_webhook(url=config.WEBHOOK_URL_BASE + config.WEBHOOK_URL_PATH,
                certificate=open(config.WEBHOOK_SSL_CERT, 'r'))
# –£–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ CherryPy
cherrypy.config.update({
    'server.socket_host': config.WEBHOOK_LISTEN,
    'server.socket_port': config.WEBHOOK_PORT,
    'server.ssl_module': 'builtin',
    'server.ssl_certificate': config.WEBHOOK_SSL_CERT,
    'server.ssl_private_key': config.WEBHOOK_SSL_PRIV
})
 # –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ, –∑–∞–ø—É—Å–∫!
cherrypy.quickstart(WebhookServer(), config.WEBHOOK_URL_PATH, {'/': {}})